import { describe, expect, it } from 'vitest'
import { execa } from 'execa'
import { join } from 'path'

const cliPath = join(__dirname, '../dist/cli.cjs')

// ðŸŸ¢ normal(require only)
it('CLI: minimum args â†’ runs with resolver + input only', () => {})

// ðŸŸ¢ normal(full options)
it('CLI: full args â†’ runs with all supported options', () => {})

// ðŸŸ¡ meta
describe('CLI meta options', () => {
  it('CLI: --version â†’ shows version and exits', () => {})

  it('CLI: --help â†’ shows help and exits', () => {})

  it('CLI: smart --help â†’ shows smart resolver help', () => {})

  it('CLI: file --help â†’ shows file resolver help', () => {})

  it('CLI: dataurl --help â†’ shows dataurl resolver help', () => {})
});

// ðŸ”´ Exceptional
it('CLI: unknown resolver â†’ exits with error', () => {})
it('CLI: missing input file â†’ exits with error', () => {})
it('CLI: invalid selector format â†’ throws error', () => {})
it('CLI: invalid inline-limit (NaN) â†’ exits or warns', () => {})
